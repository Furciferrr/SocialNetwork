{"version":3,"sources":["components/Users/users.module.css","components/Paginator/paginator.module.css","components/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"names":["module","exports","Paginator","props","pagesCount","Math","ceil","usersTotalCount","pageSize","useState","portionNumber","setPortionNumber","leftPortionCount","rightPortionCount","pages","i","push","className","classes","pageNumber","onClick","filter","p","map","e","onPageChenge","currentPage","activePage","User","wrapUsers","to","user","id","src","photos","small","userPhotoDefault","alt","name","status","followed","disabled","followingProgress","some","unfollowThunk","followThunk","userSearchFormValidate","values","UsersSearchForm","useSelector","getUsersFilter","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","onFilterChanged","isSubmitting","type","as","value","Users","getTotalUser","getCurrentPage","getPageSize","users","getUsers","getfollowingProgress","dispatch","useDispatch","history","useHistory","useEffect","parsed","queryString","location","search","substr","actualPage","actualFilter","page","Number","getUsersThunk","onPageChengeThunk","pathname","follow","userId","unfollow","usersPageWrap","u","UsersPage","isFetching","getIsFetching"],"mappings":"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","file":"static/js/4.8851a280.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapUsers\":\"users_wrapUsers__1JV1H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activePage\":\"paginator_activePage__1QgmY\",\"pageNumber\":\"paginator_pageNumber__3HBfK\"};","import React, { useState } from 'react'\r\nimport classes from './paginator.module.css'\r\n\r\ntype Props = {\r\n    usersTotalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChenge: (p: number) => void\r\n}\r\nconst Paginator: React.FC<Props> = (props) => {\r\n    let pagesCount = Math.ceil(props.usersTotalCount / props.pageSize);\r\n    let [portionNumber, setPortionNumber] = useState(2)\r\n    let portionSize = 10;\r\n    let leftPortionCount = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionCount = portionNumber * portionSize;\r\n\r\n \r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n            <div className={classes.pageNumber}>\r\n                {portionNumber > 1 &&\r\n                <button onClick={ ()=> {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }  } >Prev</button>}\r\n                {\r\n                    pages.filter( p => p >= leftPortionCount && p <= rightPortionCount).map( p => {\r\n                        return (\r\n                        <span onClick={ (e) => {props.onPageChenge(p)}} className={props.currentPage === p ? classes.activePage : ''}>{p}</span>\r\n                        )\r\n                    })  \r\n                }\r\n                {portionNumber < pagesCount &&\r\n                <button onClick={ ()=> {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }  } >Next</button>}\r\n                \r\n            </div>\r\n           \r\n        )\r\n}\r\n\r\nexport default Paginator","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { userType } from '../../Types/types';\r\nimport userPhotoDefault from './../../assets/images/users.png'\r\nimport classes from './users.module.css'\r\n\r\n\r\ntype propsType = {\r\n    user: userType \r\n    followingProgress: Array <number> \r\n    followThunk: (userId: number) => void\r\n    unfollowThunk: (userId: number) => void\r\n}\r\n\r\nconst User: React.FC <propsType> = (props) => {\r\n    return (\r\n            <div className={classes.wrapUsers}>\r\n                <NavLink to={'/profile/' + props.user.id}>\r\n                <div><img src={props.user.photos.small != null ? props.user.photos.small : userPhotoDefault} alt=\"ava\"/></div>\r\n                </NavLink>\r\n                <div>{props.user.name}</div>\r\n                <div>{props.user.status || 'Not Status'}</div>\r\n                <div>{'user.location.city'}</div>\r\n                <div>'{'props.user.location.country'}'</div>\r\n                <div>\r\n                {props.user.followed \r\n                    ? <button disabled={props.followingProgress\r\n                    .some(id => id === props.user.id)} \r\n                    onClick={ () => {\r\n                        props.unfollowThunk(props.user.id)\r\n                        }}>Unfollow</button>\r\n\r\n                    : <button disabled={props.followingProgress\r\n                        .some(id => id === props.user.id)} onClick={() =>{\r\n                        props.followThunk(props.user.id)\r\n                        }}>Follow</button>}\r\n                </div>\r\n            </div>\r\n            )}\r\n\r\nexport default User","import React from 'react'\r\nimport { Field, Form, Formik } from 'formik';\r\nimport { FilterType } from '../../redax/users-reducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsersFilter } from '../../redax/selectors';\r\n\r\n\r\n\r\n\r\nconst userSearchFormValidate = (values: any) => {\r\n    const errors = {};\r\n    return errors;\r\n}\r\ntype FrienFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FrienFormType\r\n}\r\n\r\ntype UserSearchFormPropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nconst UsersSearchForm: React.FC<UserSearchFormPropsType> = (props) => {\r\n    const filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormType, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n        values.term = ''\r\n    };\r\n    return (\r\n        <div>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{ term: filter.term, friend: String(filter.friend) as FrienFormType}}\r\n                validate={userSearchFormValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\" />\r\n                        <Field as=\"select\" name=\"friend\">\r\n                            <option value=\"null\">All</option>\r\n                            <option value=\"true\">Only followed</option>\r\n                            <option value=\"false\">Only unfollowed</option>\r\n                        </Field>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Find\r\n           </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersSearchForm","import React, { useEffect } from 'react'\r\nimport classes from './users.module.css'\r\nimport Paginator from '../Paginator/Paginator';\r\nimport User from './User';\r\nimport UsersSearchForm from './UsersSearchForm';\r\nimport { FilterType, followThunk, getUsersThunk, onPageChengeThunk, unfollowThunk } from '../../redax/users-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentPage, getfollowingProgress, getPageSize, getTotalUser, getUsers, getUsersFilter } from '../../redax/selectors';\r\nimport { useHistory } from 'react-router-dom';\r\nimport *as queryString from 'querystring'\r\n\r\ntype Props = {}\r\n\r\nexport const Users: React.FC<Props> = () => {\r\n    const usersTotalCount = useSelector(getTotalUser)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const users = useSelector(getUsers)\r\n    const followingProgress = useSelector(getfollowingProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as {term: string, page: string, friend: string}\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if(!!parsed.page) actualPage = Number(parsed.page)\r\n        if(!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch(parsed.friend) {\r\n            case 'null': actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case 'true': actualFilter = {...actualFilter, friend: true}  \r\n                break;  \r\n            case 'false': actualFilter = {...actualFilter, friend: false}\r\n                break; \r\n        }\r\n        dispatch(getUsersThunk(actualPage, pageSize, actualFilter))\r\n        dispatch(onPageChengeThunk(actualPage, pageSize, actualFilter))\r\n    },[])\r\n\r\n    useEffect(()=> {\r\n        history.push({\r\n            pathname: '/users',\r\n            search:`?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChenge = (pageNumber: number) => {\r\n        dispatch(onPageChengeThunk(pageNumber, pageSize, filter))\r\n    } \r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsersThunk(1, pageSize, filter))\r\n    }\r\n\r\n    const follow = (userId: number) => {\r\n        dispatch(followThunk(userId))\r\n    }\r\n\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unfollowThunk(userId))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.usersPageWrap}>\r\n            <div>\r\n                <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n            </div>\r\n\r\n            <Paginator usersTotalCount={usersTotalCount}\r\n                pageSize={pageSize}\r\n                onPageChenge={onPageChenge}\r\n                currentPage={currentPage} />\r\n            {\r\n                users.map(u =>\r\n                    <User user={u}\r\n                        key={u.id}\r\n                        followingProgress={followingProgress}\r\n                        followThunk={follow}\r\n                        unfollowThunk={unfollow} />\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Users} from './Users'\r\nimport Preloader from '../common/preloader/preloader'\r\nimport { useSelector } from 'react-redux'\r\nimport { getIsFetching } from '../../redax/selectors'\r\n\r\n\r\n\r\n\r\ntype UsersPropsType = {}\r\n\r\nconst UsersPage: React.FC<UsersPropsType> = (props) => {\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return <>\r\n    {isFetching ? <Preloader/> : null}\r\n    <Users/>\r\n</>\r\n}\r\n\r\nexport default UsersPage"],"sourceRoot":""}