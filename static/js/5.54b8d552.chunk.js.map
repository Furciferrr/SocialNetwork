{"version":3,"sources":["Pages/Chat/ChatPage.tsx"],"names":["ws","WebSocket","Chat","Messages","AddmessageChatForm","useState","messages","setMessages","useEffect","addEventListener","e","prevMessages","JSON","parse","data","style","height","overflowY","map","m","index","Message","message","alt","src","photo","userName","setMessage","readyStatus","setReadyStatus","onChange","currentTarget","value","onClick","send","disabled","ChatPage"],"mappings":"qJAEMA,EAAK,IAAIC,UAAU,gEAkBfC,EAAiB,WAEnB,OACI,gCACI,cAACC,EAAD,IACA,cAACC,EAAD,QAKND,EAAqB,WAAO,IAAD,EAEGE,mBAA4B,IAF/B,mBAEtBC,EAFsB,KAEZC,EAFY,KAU7B,OANAC,qBAAU,WACNR,EAAGS,iBAAiB,WAAW,SAACC,GAC5BH,GAAY,SAACI,GAAD,4BAAsBA,GAAtB,YAAuCC,KAAKC,MAAMH,EAAEI,gBAEtE,IAGE,qBAAKC,MAAO,CAAEC,OAAO,QAASC,UAAW,QAAzC,SACKX,EAASY,KAAI,SAACC,EAAGC,GACd,OAAO,cAACC,EAAD,CAAqBC,QAASH,GAAhBC,SAM/BC,EAAgD,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAEpD,OACI,gCACI,qBAAKC,IAAI,SAASC,IAAKF,EAAQG,QADnC,IAC4C,4BAAIH,EAAQI,WACpD,uBACCJ,EAAQA,QACT,2BAKNlB,EAA+B,WAAO,IAAD,EACTC,mBAAS,IADA,mBAChCiB,EADgC,KACvBK,EADuB,OAEDtB,oBAAS,GAFR,mBAEhCuB,EAFgC,KAEnBC,EAFmB,KAIvCrB,qBAAU,WACNR,EAAGS,iBAAiB,QAAQ,WACxBoB,GAAe,QAErB,IAQF,OACI,gCACI,8BACA,0BAAUC,SAAU,SAACpB,GAAD,OAAOiB,EAAWjB,EAAEqB,cAAcC,QAAQA,MAAOV,MAErE,8BACA,wBAAQW,QAbI,WACZX,IAGJtB,EAAGkC,KAAKZ,GACRK,EAAW,MAQuBQ,UAAWP,EAAzC,wBAODQ,UA/EgB,WAC3B,OACI,8BACI,cAAClC,EAAD","file":"static/js/5.54b8d552.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nexport type ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\n    const ChatPage: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Chat/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n    const Chat: React.FC = () => {\r\n        \r\n        return (\r\n            <div>\r\n                <Messages/>\r\n                <AddmessageChatForm/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Messages: React.FC = () => {\r\n\r\n        const [messages, setMessages] = useState<ChatMessageType[]>([])\r\n\r\n        useEffect(()=> {\r\n            ws.addEventListener('message', (e)=> {\r\n                setMessages((prevMessages) => [...prevMessages, ...JSON.parse(e.data)])\r\n            })\r\n        },[])\r\n\r\n        return (\r\n            <div style={{ height:'400px', overflowY: 'auto'}} >\r\n                {messages.map((m, index)=>{\r\n                    return <Message key={index} message={m}/>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const Message: React.FC<{message: ChatMessageType}> = ({message}) => {\r\n        \r\n        return (\r\n            <div>\r\n                <img alt='avatar' src={message.photo}/> <b>{message.userName}</b>\r\n                <br/>\r\n                {message.message}\r\n                <hr/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const AddmessageChatForm: React.FC = () => {\r\n        const [message, setMessage] = useState('')\r\n        const [readyStatus, setReadyStatus] = useState(false)\r\n\r\n        useEffect(()=>{\r\n            ws.addEventListener('open', ()=>{\r\n                setReadyStatus(true)\r\n            })\r\n        },[])\r\n        const sendMessage = () => {\r\n            if(!message){\r\n                return\r\n            }\r\n            ws.send(message)  \r\n            setMessage('')  \r\n        }\r\n        return (\r\n            <div>\r\n                <div>\r\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message} ></textarea>\r\n                </div>\r\n                <div>\r\n                <button onClick={sendMessage} disabled={!readyStatus}>Send</button>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ChatPage"],"sourceRoot":""}